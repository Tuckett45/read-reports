{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/shared/services/auth.service\";\nimport * as i3 from \"src/shared/services/orders.service\";\nfunction AdjustmentComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵelement(1, \"div\", 3);\n    i0.ɵɵelementStart(2, \"div\", 4)(3, \"div\", 5)(4, \"div\", 6);\n    i0.ɵɵtext(5, \"Please Choose a Date Range\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 7)(7, \"form\", 8);\n    i0.ɵɵelement(8, \"input\", 9)(9, \"input\", 10)(10, \"input\", 11)(11, \"input\", 12);\n    i0.ɵɵelementStart(12, \"button\", 13);\n    i0.ɵɵtext(13, \"Run Report\");\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelement(14, \"div\", 3);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdjustmentComponent_div_1_mat_header_cell_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\", 25);\n    i0.ɵɵtext(1, \" No. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdjustmentComponent_div_1_mat_cell_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r13 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r13.position, \" \");\n  }\n}\nfunction AdjustmentComponent_div_1_mat_header_cell_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\", 25);\n    i0.ɵɵtext(1, \" Name \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdjustmentComponent_div_1_mat_cell_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r14 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r14.name, \" \");\n  }\n}\nfunction AdjustmentComponent_div_1_mat_header_cell_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\", 25);\n    i0.ɵɵtext(1, \" Weight \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdjustmentComponent_div_1_mat_cell_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r15 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r15.weight, \" \");\n  }\n}\nfunction AdjustmentComponent_div_1_mat_header_cell_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\", 25);\n    i0.ɵɵtext(1, \" Symbol \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdjustmentComponent_div_1_mat_cell_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r16 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r16.symbol, \" \");\n  }\n}\nfunction AdjustmentComponent_div_1_mat_header_row_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-header-row\");\n  }\n}\nfunction AdjustmentComponent_div_1_mat_row_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-row\");\n  }\n}\nfunction AdjustmentComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"mat-table\", 15, 16);\n    i0.ɵɵelementContainerStart(3, 17);\n    i0.ɵɵtemplate(4, AdjustmentComponent_div_1_mat_header_cell_4_Template, 2, 0, \"mat-header-cell\", 18);\n    i0.ɵɵtemplate(5, AdjustmentComponent_div_1_mat_cell_5_Template, 2, 1, \"mat-cell\", 19);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(6, 20);\n    i0.ɵɵtemplate(7, AdjustmentComponent_div_1_mat_header_cell_7_Template, 2, 0, \"mat-header-cell\", 18);\n    i0.ɵɵtemplate(8, AdjustmentComponent_div_1_mat_cell_8_Template, 2, 1, \"mat-cell\", 19);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(9, 21);\n    i0.ɵɵtemplate(10, AdjustmentComponent_div_1_mat_header_cell_10_Template, 2, 0, \"mat-header-cell\", 18);\n    i0.ɵɵtemplate(11, AdjustmentComponent_div_1_mat_cell_11_Template, 2, 1, \"mat-cell\", 19);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(12, 22);\n    i0.ɵɵtemplate(13, AdjustmentComponent_div_1_mat_header_cell_13_Template, 2, 0, \"mat-header-cell\", 18);\n    i0.ɵɵtemplate(14, AdjustmentComponent_div_1_mat_cell_14_Template, 2, 1, \"mat-cell\", 19);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵtemplate(15, AdjustmentComponent_div_1_mat_header_row_15_Template, 1, 0, \"mat-header-row\", 23);\n    i0.ɵɵtemplate(16, AdjustmentComponent_div_1_mat_row_16_Template, 1, 0, \"mat-row\", 24);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dataSource\", ctx_r1.dataSource);\n    i0.ɵɵadvance(14);\n    i0.ɵɵproperty(\"matHeaderRowDef\", ctx_r1.displayedColumns);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matRowDefColumns\", ctx_r1.displayedColumns);\n  }\n}\nexport class AdjustmentComponent {\n  constructor(formBuilder, authService, orderService) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.orderService = orderService;\n    this.adjustmentReportData = false;\n    this.isEmployeeIdRequired = false;\n  }\n  ngOnInit() {\n    this.orderForm = this.formBuilder.group({\n      store: ['', Validators.required],\n      product: ['', Validators.required],\n      quantity: [0, Validators.required],\n      employeeId: [0]\n    });\n  }\n  getStores() {\n    //TODO - Make GET call to retrieve stores\n  }\n  getProducts() {\n    //TODo - make GET call to retrieve products\n  }\n  save() {\n    //TODO - make API call to save order\n  }\n  addItem(itemadded) {\n    this.orderForm.setValue(itemadded);\n  }\n  cancelItem() {\n    //TODO - remove single item from table\n    this.orderForm.reset();\n  }\n  cancel() {\n    //TODo - clear order form/form values\n  }\n}\nAdjustmentComponent.ɵfac = function AdjustmentComponent_Factory(t) {\n  return new (t || AdjustmentComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.OrdersService));\n};\nAdjustmentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AdjustmentComponent,\n  selectors: [[\"adjustment-report\"]],\n  decls: 2,\n  vars: 2,\n  consts: [[\"class\", \"row\", 4, \"ngIf\"], [\"class\", \"example-container mat-elevation-z8\", 4, \"ngIf\"], [1, \"row\"], [1, \"col-md-3\", \"col-sm-1\"], [1, \"col-md-6\", \"col-sm-10\"], [1, \"panel\", \"panel-default\"], [1, \"panel-heading\"], [1, \"panel-body\", 2, \"padding-bottom\", \"10px\", \"text-align\", \"center\"], [\"action\", \"index.cfm\", \"id\", \"form1\", \"method\", \"post\", \"name\", \"form1\", 1, \"form-inline\"], [\"type\", \"text\", \"id\", \"daterange\", \"size\", \"23\", 1, \"form-control\"], [\"id\", \"dtStart\", \"type\", \"hidden\", \"name\", \"FromDate\", \"value\", \"04/29/2023\"], [\"id\", \"dtEnd\", \"type\", \"hidden\", \"name\", \"ToDate\", \"value\", \"04/29/2023\"], [\"name\", \"fuse\", \"type\", \"hidden\", \"value\", \"order_list\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"example-container\", \"mat-elevation-z8\"], [\"matSort\", \"\", 3, \"dataSource\"], [\"table\", \"\"], [\"matColumnDef\", \"position\"], [\"mat-sort-header\", \"\", 4, \"matHeaderCellDef\"], [4, \"matCellDef\"], [\"matColumnDef\", \"name\"], [\"matColumnDef\", \"weight\"], [\"matColumnDef\", \"symbol\"], [4, \"matHeaderRowDef\"], [4, \"matRowDef\", \"matRowDefColumns\"], [\"mat-sort-header\", \"\"]],\n  template: function AdjustmentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AdjustmentComponent_div_0_Template, 15, 0, \"div\", 0);\n      i0.ɵɵtemplate(1, AdjustmentComponent_div_1_Template, 17, 3, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.adjustmentReportData);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.adjustmentReportData);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AACA,SAA8CA,UAAU,QAAQ,gBAAgB;;;;;;;ICDhFC,8BAAoD;IAChDA,yBAAqC;IACrCA,8BAAgC;IAEGA,0CAA0B;IAAAA,iBAAM;IAC3DA,8BAAyE;IAEjEA,2BAAiE;IAIjEA,mCAA8C;IAAAA,2BAAU;IAAAA,iBAAS;IAKjFA,0BAAqC;IACzCA,iBAAM;;;;;IAQEA,2CAAmD;IAACA,qBAAI;IAAAA,iBAAkB;;;;;IAC1EA,gCAAoC;IAACA,YAAqB;IAAAA,iBAAW;;;;IAAhCA,eAAqB;IAArBA,qDAAqB;;;;;IAK1DA,2CAAmD;IAACA,sBAAK;IAAAA,iBAAkB;;;;;IAC3EA,gCAAoC;IAACA,YAAiB;IAAAA,iBAAW;;;;IAA5BA,eAAiB;IAAjBA,iDAAiB;;;;;IAKtDA,2CAAmD;IAACA,wBAAO;IAAAA,iBAAkB;;;;;IAC7EA,gCAAoC;IAACA,YAAmB;IAAAA,iBAAW;;;;IAA9BA,eAAmB;IAAnBA,mDAAmB;;;;;IAKxDA,2CAAmD;IAACA,wBAAO;IAAAA,iBAAkB;;;;;IAC7EA,gCAAoC;IAACA,YAAmB;IAAAA,iBAAW;;;;IAA9BA,eAAmB;IAAnBA,mDAAmB;;;;;IAG1DA,iCAAqE;;;;;IACrEA,0BAAoE;;;;;IA5B1EA,+BAAkF;IAI5EA,iCAAsC;IACpCA,mGAA0E;IAC1EA,qFAAqE;IACvEA,0BAAe;IAGfA,iCAAkC;IAChCA,mGAA2E;IAC3EA,qFAAiE;IACnEA,0BAAe;IAGfA,iCAAoC;IAClCA,qGAA6E;IAC7EA,uFAAmE;IACrEA,0BAAe;IAGfA,kCAAoC;IAClCA,qGAA6E;IAC7EA,uFAAmE;IACrEA,0BAAe;IAEfA,mGAAqE;IACrEA,qFAAoE;IACtEA,iBAAY;;;;IA5BMA,eAAyB;IAAzBA,8CAAyB;IA0BxBA,gBAAiC;IAAjCA,yDAAiC;IACpBA,eAA0B;IAA1BA,0DAA0B;;;ADpC9D,OAAM,MAAOC,mBAAmB;EAO5BC,YAAoBC,WAAwB,EAAUC,WAAwB,EACtEC,YAA2B;IADf,gBAAW,GAAXF,WAAW;IAAuB,gBAAW,GAAXC,WAAW;IACzD,iBAAY,GAAZC,YAAY;IAPpB,yBAAoB,GAAY,KAAK;IACrC,yBAAoB,GAAY,KAAK;EAQrC;EACAC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACpCC,KAAK,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACW,QAAQ,CAAC;MAChCC,OAAO,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACW,QAAQ,CAAC;MAClCE,QAAQ,EAAE,CAAC,CAAC,EAAEb,UAAU,CAACW,QAAQ,CAAC;MAClCG,UAAU,EAAE,CAAC,CAAC;KACjB,CAAC;EACJ;EAEAC,SAAS;IACP;EAAA;EAGFC,WAAW;IACT;EAAA;EAGFC,IAAI;IACF;EAAA;EAGFC,OAAO,CAACC,SAAiB;IACvB,IAAI,CAACX,SAAS,CAACY,QAAQ,CAACD,SAAS,CAAC;EACpC;EAEAE,UAAU;IACR;IACA,IAAI,CAACb,SAAS,CAACc,KAAK,EAAE;EACxB;EAEAC,MAAM;IACJ;EAAA;;AA1COrB,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZhC3B,qEAiBM;MAGNA,qEA8BQ;;;MAlDFA,gDAAgC;MAoBhCA,eAA+B;MAA/BA,+CAA+B","names":["Validators","i0","AdjustmentComponent","constructor","formBuilder","authService","orderService","ngOnInit","orderForm","group","store","required","product","quantity","employeeId","getStores","getProducts","save","addItem","itemadded","setValue","cancelItem","reset","cancel","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\tucau\\repos\\read-reports\\src\\app\\components\\home-page\\reports\\adjustment\\adjustment.component.ts","C:\\Users\\tucau\\repos\\read-reports\\src\\app\\components\\home-page\\reports\\adjustment\\adjustment.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from 'src/shared/services/auth.service';\r\nimport { DistrictsModel } from 'src/shared/models/districts.model';\r\nimport { RegionsModel } from 'src/shared/models/regions.model';\r\nimport { StoresModel } from 'src/shared/models/stores.model';\r\nimport { OrdersService } from 'src/shared/services/orders.service';\r\n\r\n@Component({\r\n  selector: 'adjustment-report',\r\n  templateUrl: './adjustment.component.html'\r\n})\r\nexport class AdjustmentComponent implements OnInit {\r\n    adjustmentReportData: boolean = false;\r\n    isEmployeeIdRequired: boolean = false;\r\n    stores: StoresModel[] | undefined;\r\n    orderForm!: FormGroup;\r\n\r\n\r\n    constructor(private formBuilder: FormBuilder, private authService: AuthService, \r\n    private orderService: OrdersService){\r\n\r\n    }\r\n    ngOnInit() {\r\n      this.orderForm = this.formBuilder.group({\r\n          store: ['', Validators.required],\r\n          product: ['', Validators.required],\r\n          quantity: [0, Validators.required],\r\n          employeeId: [0]\r\n      });\r\n    }\r\n\r\n    getStores(){\r\n      //TODO - Make GET call to retrieve stores\r\n    }\r\n\r\n    getProducts(){\r\n      //TODo - make GET call to retrieve products\r\n    }\r\n\r\n    save(){\r\n      //TODO - make API call to save order\r\n    }\r\n\r\n    addItem(itemadded: object){\r\n      this.orderForm.setValue(itemadded);\r\n    }\r\n\r\n    cancelItem(){\r\n      //TODO - remove single item from table\r\n      this.orderForm.reset();\r\n    }\r\n\r\n    cancel(){\r\n      //TODo - clear order form/form values\r\n    }\r\n\r\n\r\n}\r\n","<div *ngIf=\"!this.adjustmentReportData\" class=\"row\">\r\n    <div class=\"col-md-3 col-sm-1\"></div>\r\n    <div class=\"col-md-6 col-sm-10\">\r\n        <div class=\"panel panel-default\">\r\n            <div class=\"panel-heading\">Please Choose a Date Range</div>\r\n            <div class=\"panel-body\" style=\"padding-bottom: 10px;text-align: center;\">\r\n                <form action=\"index.cfm\" class=\"form-inline\" id=\"form1\" method=\"post\" name=\"form1\">\r\n                    <input type=\"text\" class=\"form-control\" id=\"daterange\" size=\"23\">\r\n                    <input id=\"dtStart\" type=\"hidden\" name=\"FromDate\" value=\"04/29/2023\">\r\n                    <input id=\"dtEnd\" type=\"hidden\" name=\"ToDate\" value=\"04/29/2023\">\r\n                    <input name=\"fuse\" type=\"hidden\" value=\"order_list\">\r\n                    <button type=\"submit\" class=\"btn btn-primary\">Run Report</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-3 col-sm-1\"></div>\r\n</div>\r\n\r\n\r\n<div *ngIf=\"this.adjustmentReportData\" class=\"example-container mat-elevation-z8\">\r\n    <mat-table #table [dataSource]=\"dataSource\" matSort>\r\n  \r\n      <!-- Position Column -->\r\n      <ng-container matColumnDef=\"position\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header> No. </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\r\n      </ng-container>\r\n  \r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"name\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\r\n      </ng-container>\r\n  \r\n      <!-- Weight Column -->\r\n      <ng-container matColumnDef=\"weight\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Weight </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\r\n      </ng-container>\r\n  \r\n      <!-- Symbol Column -->\r\n      <ng-container matColumnDef=\"symbol\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Symbol </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\r\n      </ng-container>\r\n  \r\n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n    </mat-table>\r\n  </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}